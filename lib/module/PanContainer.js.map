{"version":3,"names":["React","useRef","Animated","PanResponder","View","getDistance","getScale","PanContainer","children","close","setIsDragging","translationXY","ValueXY","current","scale","Value","_initialTouches","onRelease","_","gestureState","dy","length","parallel","timing","duration","toValue","useNativeDriver","x","y","start","panResponder","create","onStartShouldSetPanResponder","onMoveShouldSetPanResponder","absDx","Math","abs","dx","absDY","numberActiveTouches","onPanResponderGrant","evt","nativeEvent","touches","setOffset","onPanResponderMove","setValue","currentDistance","initialDistance","newScale","onPanResponderTerminationRequest","onPanResponderRelease","onPanResponderTerminate","createElement","_extends","panHandlers","style","transform","translateX","translateY"],"sources":["PanContainer.tsx"],"sourcesContent":["import React, { useRef } from 'react';\nimport {\n  Animated,\n  GestureResponderEvent,\n  PanResponder,\n  PanResponderGestureState,\n  View,\n} from 'react-native';\nimport { getDistance, getScale } from './_helpers';\n\nconst PanContainer = ({\n  children,\n  close,\n  setIsDragging,\n}: {\n  children: any;\n  close: () => void;\n  setIsDragging: any;\n}) => {\n  const translationXY = useRef(new Animated.ValueXY()).current;\n  const scale = useRef(new Animated.Value(1)).current;\n  let _initialTouches: any = useRef().current;\n\n  const onRelease = (\n    _: GestureResponderEvent,\n    gestureState: PanResponderGestureState\n  ): void | boolean => {\n    setIsDragging(false);\n    if (gestureState.dy > 180 && _initialTouches.length === 1) {\n      close();\n      return false;\n    }\n\n    Animated.parallel([\n      Animated.timing(scale, {\n        duration: 100,\n        toValue: 1,\n        useNativeDriver: true,\n      }),\n\n      Animated.timing(translationXY.x, {\n        duration: 100,\n        toValue: 0,\n        useNativeDriver: true,\n      }),\n      Animated.timing(translationXY.y, {\n        duration: 100,\n        toValue: 0,\n        useNativeDriver: true,\n      }),\n    ]).start();\n  };\n\n  const panResponder = React.useRef(\n    PanResponder.create({\n      onStartShouldSetPanResponder: () => true,\n      onMoveShouldSetPanResponder: (\n        _: GestureResponderEvent,\n        gestureState: PanResponderGestureState\n      ) => {\n        const absDx = Math.abs(gestureState.dx);\n        const absDY = Math.abs(gestureState.dy);\n        if (absDY > 5 && absDx <= 2 && gestureState.numberActiveTouches <= 1) {\n          return true;\n        }\n        if (absDx > 0 && gestureState.numberActiveTouches <= 1) {\n          return false;\n        }\n        return true;\n      },\n      // onMoveShouldSetPanResponderCapture: (evt, gestureState) => true,\n\n      onPanResponderGrant: (evt: GestureResponderEvent) => {\n        setIsDragging(true);\n        _initialTouches = evt.nativeEvent.touches;\n\n        translationXY.setOffset({\n          x: 0,\n          y: 0,\n        });\n        return true;\n      },\n      onPanResponderMove: (\n        evt: GestureResponderEvent,\n        gestureState: PanResponderGestureState\n      ) => {\n        const { touches } = evt.nativeEvent;\n\n        if (touches.length <= 1 && Math.abs(gestureState.dy) > 10) {\n          translationXY.y.setValue(gestureState.dy);\n          return true;\n        }\n        if (touches.length <= 1 && Math.abs(gestureState.dx) > 0) {\n          setIsDragging(false);\n          return false;\n        }\n        if (touches.length < 2) {\n          // Trigger a release\n          onRelease(evt, gestureState);\n          return false;\n        }\n\n        const { dx, dy } = gestureState;\n        translationXY.x.setValue(dx);\n        translationXY.y.setValue(dy);\n        // for scaling photo\n        const currentDistance = getDistance(touches);\n        const initialDistance = getDistance(_initialTouches);\n        const newScale = getScale(currentDistance, initialDistance);\n        scale.setValue(newScale);\n        return true;\n      },\n      onPanResponderTerminationRequest: () => {\n        return true;\n      },\n      onPanResponderRelease: (\n        evt: GestureResponderEvent,\n        gestureState: PanResponderGestureState\n      ) => {\n        onRelease(evt, gestureState);\n        return true;\n      },\n      onPanResponderTerminate: () => true,\n    })\n  ).current;\n\n  return (\n    <View>\n      <Animated.View\n        {...panResponder.panHandlers}\n        style={{\n          transform: [\n            {\n              translateX: translationXY.x,\n            },\n            {\n              translateY: translationXY.y,\n            },\n            { scale: scale },\n          ],\n        }}\n      >\n        {children}\n      </Animated.View>\n    </View>\n  );\n};\n\nexport default PanContainer;\n"],"mappings":"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","ignoreList":[]}